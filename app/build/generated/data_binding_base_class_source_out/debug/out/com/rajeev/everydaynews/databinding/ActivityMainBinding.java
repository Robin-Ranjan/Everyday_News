// Generated by view binder compiler. Do not edit!
package com.rajeev.everydaynews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.rajeev.everydaynews.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LayoutActionBarBinding mActionBar;

  @NonNull
  public final LinearLayout mCardShimerHolder;

  @NonNull
  public final RecyclerView mRecycler;

  @NonNull
  public final LinearLayout mlistShimerHolder;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final ShimmerFrameLayout shimmerViewContainer;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull LayoutActionBarBinding mActionBar, @NonNull LinearLayout mCardShimerHolder,
      @NonNull RecyclerView mRecycler, @NonNull LinearLayout mlistShimerHolder,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull ShimmerFrameLayout shimmerViewContainer) {
    this.rootView = rootView;
    this.mActionBar = mActionBar;
    this.mCardShimerHolder = mCardShimerHolder;
    this.mRecycler = mRecycler;
    this.mlistShimerHolder = mlistShimerHolder;
    this.refreshLayout = refreshLayout;
    this.shimmerViewContainer = shimmerViewContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mActionBar;
      View mActionBar = ViewBindings.findChildViewById(rootView, id);
      if (mActionBar == null) {
        break missingId;
      }
      LayoutActionBarBinding binding_mActionBar = LayoutActionBarBinding.bind(mActionBar);

      id = R.id.mCardShimerHolder;
      LinearLayout mCardShimerHolder = ViewBindings.findChildViewById(rootView, id);
      if (mCardShimerHolder == null) {
        break missingId;
      }

      id = R.id.mRecycler;
      RecyclerView mRecycler = ViewBindings.findChildViewById(rootView, id);
      if (mRecycler == null) {
        break missingId;
      }

      id = R.id.mlistShimerHolder;
      LinearLayout mlistShimerHolder = ViewBindings.findChildViewById(rootView, id);
      if (mlistShimerHolder == null) {
        break missingId;
      }

      id = R.id.refreshLayout;
      SwipeRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.shimmer_view_container;
      ShimmerFrameLayout shimmerViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (shimmerViewContainer == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, binding_mActionBar,
          mCardShimerHolder, mRecycler, mlistShimerHolder, refreshLayout, shimmerViewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
